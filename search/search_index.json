{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>Welcome to the Killarney Heights High School Coding and Robotics Site.</p>"},{"location":"Robotics/intro/","title":"Introduction","text":"<p>Robot come in all shapes and sizes. We try different technologies like micro:bit, lego, arduino and Raspberry Pi to see which ones are easy to work with and what are their strengths and limitations. Types of robots we can try build are the line and rescue robots used for RoboCup Junior Australia, the robots built for the First Lego League Challenge or VEX Robotics Competitions</p>"},{"location":"Robotics/microbit-basics/","title":"Micro:bit Basics","text":""},{"location":"Robotics/microbit-basics/#setup","title":"Setup","text":"<p>The easiest way to get started is to use the online tool from Microsoft https://makecode.microbit.org/ and try any of the Tutorials for the new micro:bit (v2). You can also find code below the demonstrates most of the sensors and features of the micro:bit.</p>"},{"location":"Robotics/microbit-basics/#hardware","title":"Hardware","text":""},{"location":"Robotics/microbit-basics/#sensors-and-features","title":"Sensors and Features","text":""},{"location":"Robotics/microbit-basics/#led-display","title":"LED Display","text":"<p>You can display messages and icons on the 5x5 display LEDS. </p> PythonJavascript <pre><code>def on_forever():\n    basic.show_string(\"Hello!\")\nbasic.forever(on_forever)\n</code></pre> <pre><code>basic.forever(function on_forever() {\n    basic.showString(\"Hello!\")\n})\n</code></pre> <p>Question</p> <p>Change the display to show an icon.</p>"},{"location":"Robotics/microbit-basics/#temperature-sensor","title":"Temperature Sensor","text":"PythonJavascript <pre><code>def on_forever():\n    if input.temperature() &gt; 25:\n        basic.show_icon(IconNames.SAD)\n    else:\n        basic.show_icon(IconNames.HAPPY)\nbasic.forever(on_forever)\n</code></pre> <pre><code>basic.forever(function () {\n    if (input.temperature() &gt; 25) {\n        basic.showIcon(IconNames.Sad)\n    } else {\n        basic.showIcon(IconNames.Happy)\n    }\n})\n</code></pre> <p>Question</p> <p>Can you make it play music when the temperature is at a comfortable level?</p>"},{"location":"Robotics/microbit-basics/#light-level","title":"Light Level","text":"PythonJavascript <pre><code>light_level = 0\n\ndef on_forever():\n    global light_level\n    light_level = input.light_level()\n    if light_level &gt; 100:\n        basic.show_icon(IconNames.GHOST)\n    else:\n        basic.show_icon(IconNames.ANGRY)\nbasic.forever(on_forever)    \n</code></pre> <pre><code>let light_level = 0\nbasic.forever(function on_forever() {\n\n    light_level = input.lightLevel()\n    if (light_level &gt; 100) {\n        basic.showIcon(IconNames.Ghost)\n    } else {\n        basic.showIcon(IconNames.Angry)\n    }\n\n})\n</code></pre>"},{"location":"Robotics/microbit-basics/#buttons","title":"Buttons","text":"<p>Pong was one of the first computer games you could play at home. This version you can play on the micro:bit against yourself. </p> PythonJavascript <pre><code>bar_x = 0\npoint = 0\ninterval = 0\ninterval_step = 0\nball_x = 0\nball_y = 0\nball_dx = 0\nball_dy = 0\nin_game = False\n\n# Move the bar left\ndef on_button_pressed_a():\n    global bar_x\n    if bar_x &gt; 0:\n        led.unplot(bar_x + 1, 4)\n        bar_x = bar_x - 1\n        led.plot(bar_x, 4)\ninput.on_button_pressed(Button.A, on_button_pressed_a)\n\n# Move the bar right\ndef on_button_pressed_b():\n    global bar_x\n    if bar_x &lt; 3:\n        led.unplot(bar_x, 4)\n        bar_x = bar_x + 1\n        led.plot(bar_x + 1, 4)\ninput.on_button_pressed(Button.B, on_button_pressed_b)\n\ndef on_forever():\n    global point, interval, interval_step, ball_x, ball_y, ball_dx, ball_dy, bar_x, in_game\n    point = 0\n    interval = 500\n    interval_step = 10\n    ball_x = 3\n    ball_y = 4\n    ball_dx = -1\n    ball_dy = -1\n    bar_x = 0\n    basic.show_string(\"GO!\")\n    led.plot(ball_x, ball_y)\n    led.plot(bar_x, 4)\n    led.plot(bar_x + 1, 4)\n    in_game = True\n    while in_game:\n        if ball_x + ball_dx &gt; 4:\n            ball_dx = ball_dx * -1\n        elif ball_x + ball_dx &lt; 0:\n            ball_dx = ball_dx * -1\n        if ball_y + ball_dy &lt; 0:\n            ball_dy = ball_dy * -1\n        elif ball_y + ball_dy &gt; 3:\n            if led.point(ball_x + ball_dx, ball_y + ball_dy):\n                ball_dy = ball_dy * -1\n                point = point + 1\n                if interval - interval_step &gt;= 0:\n                    interval = interval - interval_step\n            else:\n                in_game = False\n        if in_game:\n            led.plot(ball_x + ball_dx, ball_y + ball_dy)\n            led.unplot(ball_x, ball_y)\n            ball_x = ball_x + ball_dx\n            ball_y = ball_y + ball_dy\n            basic.pause(interval)\n        else:\n            game.set_score(point)\n            game.game_over()\nbasic.forever(on_forever)\n</code></pre> <pre><code>let bar_x = 0\nlet point = 0\nlet interval = 0\nlet interval_step = 0\nlet ball_x = 0\nlet ball_y = 0\nlet ball_dx = 0\nlet ball_dy = 0\nlet in_game = false\n\n//  Move the bar left\ninput.onButtonPressed(Button.A, function on_button_pressed_a() {\n\n    if (bar_x &gt; 0) {\n        led.unplot(bar_x + 1, 4)\n        bar_x = bar_x - 1\n        led.plot(bar_x, 4)\n    }\n\n})\n\n//  Move the bar right\ninput.onButtonPressed(Button.B, function on_button_pressed_b() {\n\n    if (bar_x &lt; 3) {\n        led.unplot(bar_x, 4)\n        bar_x = bar_x + 1\n        led.plot(bar_x + 1, 4)\n    }\n\n})\n\nbasic.forever(function on_forever() {\n\n    point = 0\n    interval = 500\n    interval_step = 10\n    ball_x = 3\n    ball_y = 4\n    ball_dx = -1\n    ball_dy = -1\n    bar_x = 0\n    basic.showString(\"GO!\")\n    led.plot(ball_x, ball_y)\n    led.plot(bar_x, 4)\n    led.plot(bar_x + 1, 4)\n    in_game = true\n    while (in_game) {\n        if (ball_x + ball_dx &gt; 4) {\n            ball_dx = ball_dx * -1\n        } else if (ball_x + ball_dx &lt; 0) {\n            ball_dx = ball_dx * -1\n        }\n\n        if (ball_y + ball_dy &lt; 0) {\n            ball_dy = ball_dy * -1\n        } else if (ball_y + ball_dy &gt; 3) {\n            if (led.point(ball_x + ball_dx, ball_y + ball_dy)) {\n                ball_dy = ball_dy * -1\n                point = point + 1\n                if (interval - interval_step &gt;= 0) {\n                    interval = interval - interval_step\n                }\n\n            } else {\n                in_game = false\n            }\n\n        }\n\n        if (in_game) {\n            led.plot(ball_x + ball_dx, ball_y + ball_dy)\n            led.unplot(ball_x, ball_y)\n            ball_x = ball_x + ball_dx\n            ball_y = ball_y + ball_dy\n            basic.pause(interval)\n        } else {\n            game.setScore(point)\n            game.gameOver()\n        }\n\n    }\n})\n</code></pre>"},{"location":"Robotics/microbit-basics/#network","title":"Network","text":"<p>Battleship is another classic game that you can play using 2 micro:bits</p> PythonJavascript <pre><code>hit_x = 0\nhit_y = 0\nindex = 0\nposition_y = 0\nposition_x = 0\nmy_battle_area: List[number] = []\nhit_count = 0\nfire_y = 0\nfire_x = 0\n# change this number and share it with the person you will play with\nradio.set_group(123)\nfire_x = 0\nfire_y = 1\nhit_count = 0\nmy_battle_area = []\n\n# setup the board\nfor index2 in range(25):\n    my_battle_area.append(0)\nnumber_of_ships = 5\nwhile number_of_ships &gt; 0:\n    position_x = randint(0, 4)\n    position_y = 1 + randint(0, 3)\n    index = position_x + 5 * position_y\n    if my_battle_area[index] == 0:\n        my_battle_area[index] = 1\n        led.plot(position_x, position_y)\n        number_of_ships += 0 - 1\n\n# set the y-axis for the cannon\ndef on_button_pressed_b():\n    global fire_y\n    fire_y = (fire_y + 1) % 5\n    if fire_y == 0:\n        fire_y = 1\ninput.on_button_pressed(Button.B, on_button_pressed_b)\n\n# set the x-axis for the cannon\ndef on_button_pressed_a():\n    global fire_x\n    fire_x = (fire_x + 1) % 5\ninput.on_button_pressed(Button.A, on_button_pressed_a)\n\n# fire the cannon\ndef on_button_pressed_ab():\n    global fire_x, fire_y\n    radio.send_number(fire_x + 5 * fire_y)\n    fire_x = 0\n    fire_y = 1\ninput.on_button_pressed(Button.AB, on_button_pressed_ab)\n\n# receive the cannon fire\ndef on_received_number(receivedNumber):\n    global hit_y, hit_x, hit_count\n    if receivedNumber &gt;= 0:\n        if my_battle_area[receivedNumber] == 1:\n            my_battle_area[receivedNumber] = 0\n            hit_y = Math.floor(receivedNumber / 5)\n            hit_x = receivedNumber - 5 * hit_y\n            led.unplot(hit_x, hit_y)\n            radio.send_number(-1)\n        else:\n            radio.send_number(-2)\n    elif receivedNumber == -1:\n        hit_count += 1\n        led.plot(0, 0)\n        led.unplot(4, 0)\n        if hit_count == 5:\n            basic.clear_screen()\n            while True:\n                basic.show_string(\"You win!\")\n    elif receivedNumber == -2:\n        led.plot(4, 0)\n        led.unplot(0, 0)\nradio.on_received_number(on_received_number)\n</code></pre> <pre><code>// receive the cannon fire\nradio.onReceivedNumber(function on_received_number(receivedNumber: number) {\n\n    if (receivedNumber &gt;= 0) {\n        if (my_battle_area[receivedNumber] == 1) {\n            my_battle_area[receivedNumber] = 0\n            hit_y = Math.floor(receivedNumber / 5)\n            hit_x = receivedNumber - 5 * hit_y\n            led.unplot(hit_x, hit_y)\n            radio.sendNumber(-1)\n        } else {\n            radio.sendNumber(-2)\n        }\n\n    } else if (receivedNumber == -1) {\n        hit_count += 1\n        led.plot(0, 0)\n        led.unplot(4, 0)\n        if (hit_count == 5) {\n            basic.clearScreen()\n            while (true) {\n                basic.showString(\"You win!\")\n            }\n        }\n\n    } else if (receivedNumber == -2) {\n        led.plot(4, 0)\n        led.unplot(0, 0)\n    }\n\n})\n\n// set the x-axis for the cannon\ninput.onButtonPressed(Button.A, function on_button_pressed_a() {\n\n    fire_x = (fire_x + 1) % 5\n})\n\n// fire the cannon\ninput.onButtonPressed(Button.AB, function on_button_pressed_ab() {\n\n    radio.sendNumber(fire_x + 5 * fire_y)\n    fire_x = 0\n    fire_y = 1\n})\n\n// set the y-axis for the cannon\ninput.onButtonPressed(Button.B, function on_button_pressed_b() {\n\n    fire_y = (fire_y + 1) % 5\n    if (fire_y == 0) {\n        fire_y = 1\n    }\n\n})\n\n// init variables\nlet hit_x = 0\nlet hit_y = 0\nlet index = 0\nlet position_y = 0\nlet position_x = 0\nlet my_battle_area : number[] = []\nlet hit_count = 0\nlet fire_y = 0\nlet fire_x = 0\n\n// change this number and share it with the person you will play with\nradio.setGroup(123)\nfire_x = 0\nfire_y = 1\nhit_count = 0\nmy_battle_area = []\n\n// setup the board\nfor (let index2 = 0; index2 &lt; 25; index2++) {\n    my_battle_area.push(0)\n}\nlet number_of_ships = 5\nwhile (number_of_ships &gt; 0) {\n    position_x = randint(0, 4)\n    position_y = 1 + randint(0, 3)\n    index = position_x + 5 * position_y\n    if (my_battle_area[index] == 0) {\n        my_battle_area[index] = 1\n        led.plot(position_x, position_y)\n        number_of_ships += 0 - 1\n    }\n\n}\n</code></pre> <p>Question</p> <p>Will this work if one person writes their code in python and the other in javascript?</p>"}]}